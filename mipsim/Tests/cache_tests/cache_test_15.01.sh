../../mipsim ${MIPSIM_FLAGS} -is 64 -ib 16 -ia 1 -ds 64 -db 8 -da 1 -dwt > output.txt <<'EOF'

m 00000000 = 20020000 #         addi    $2, $0, 0       # i = 0
m 00000004 = 08000008 #         j       test
m 00000008 = 20030000 #         addi    $3, $0, 0       # sum = 0
m 0000000C = 00422020 # L:      add     $4, $2, $2      # i * 2
m 00000010 = 00842020 #         add     $4, $4, $4      # i * 4
m 00000014 = 8c850040 #         lw      $5, A($4)       # A[i]
m 00000018 = 00651820 #         add     $3, $3, $5      # sum = sum + A[i]
m 0000001C = 20420001 #         addi    $2, $2, 1       # i++
m 00000020 = 2846000a # test:   slti    $6, $2, 10
m 00000024 = 14c0fff9 #         bne     $6, $0, L
m 00000028 = 00000000 #         nop
m 0000002C = ac030068 #         sw      $3, result($0)
m 00000030 = 1000ffff # busy:   beq     $0, $0, busy
m 00000034 = 00000000 #         nop

m 00000040 = 1 # A:      .word  1, 2, 3, 4, 5, 6, 7, 8, 9, 10
m 00000044 = 2
m 00000048 = 3
m 0000004C = 4
m 00000050 = 5
m 00000054 = 6
m 00000058 = 7
m 0000005C = 8
m 00000060 = 9
m 00000064 = A

m 00000068 = 0 # result: .word  0

b 00000030
pc = 0
. 200
m 00000068
$2
$3
$4

pi 00000000
pi 00000010
pi 00000020
pi 00000030
pi 00000040
pi 00000050
pi 00000060

pd 00000000
pd 00000008
pd 00000010
pd 00000018
pd 00000020
pd 00000028
pd 00000030
pd 00000038
pd 00000040
pd 00000048
pd 00000050
pd 00000058
pd 00000060
pd 00000068

EOF
